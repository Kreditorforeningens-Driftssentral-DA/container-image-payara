# Actions:
# - https://github.com/marketplace/actions/build-and-push-docker-images
# - https://github.com/docker/metadata-action
# - https://github.com/docker/setup-buildx-action
# - https://github.com/docker/login-action
# - https://github.com/docker/build-push-action
---
name: Payara (Public)

on:
  workflow_dispatch:
  
  schedule:
  - cron: '0 0 15 * *' # https://crontab.guru/

  push:
    paths:
    - 'docker/*'

    branches:
    - main
    - develop

    tags:
    - '*.*.*'

jobs:
  payara:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
        - '11'
        #- '17' # MSSQL JDBC in preview only
        payara:
        - '5.2021.9'
        - '6.2021.1.Alpha1'
        # Meta prefix
        # include:
        #- jre: 11
        #  tag: 'Example'
        # Unsupported (failing)
        #exclude:
        #- java: '17'
        #  payara: 6.2021.1.Alpha1
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Get date
      id: timestamp
      run: |
        echo "::set-output name=date::$(date +'%Y-%m-%d')"
        echo "::set-output name=week::$(date +'%Y.%V')"
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: registry.hub.docker.com/kdsda/payara
        flavor: |
          latest=false
          prefix=${{ matrix.java }}.${{ matrix.payara }}-
        tags: |
          type=ref,event=branch
          type=sha,format=long
          type=raw,value=${{ steps.timestamp.outputs.week }}
        labels: |
          maintainer='drift@kred.no'
          no.kred.image.title='Payara Server'
          no.kred.image.description='Payara Server (Full)'
          no.kred.image.version="${{ matrix.payara }}"
          no.kred.image.timestamp="${{ steps.timestamp.outputs.date }}"
          no.kred.image.vendor='Kreditorforeningens Driftssentral DA'
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    -
      name: Login to Registry (Docker Hub)
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1 
      with:
        registry: registry.hub.docker.com
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_SECRET }}
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: docker
        file: "docker/Dockerfile.public"
        #builder: ${{ steps.buildx.outputs.name }}
        build-args: |
          BASE_IMAGE=azul/zulu-openjdk-debian:${{ matrix.java }}
          PAYARA_VERSION=${{ matrix.payara }}
          POSTGRES_JDBC_VERSION=42.3.1
          MSSQL_JDBC_VERSION=9.4.0
        tags: ${{ steps.meta.outputs.tags }}
        push: ${{ github.event_name != 'pull_request' }}
