---
name: Build (Docker)

on:
  workflow_dispatch:
  
  schedule:
  - cron: '30 0 15 * *' # https://crontab.guru/

env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_GITHUB_IMAGE: ${{ github.repository }}
  REGISTRY_DOCKERHUB: registry.hub.docker.com
  REGISTRY_DOCKERHUB_IMAGE: kdsda/payara

jobs:
  payara:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        java:
        - '11'
        - '17'
        payara:
        - '6.2024.1'
        - '5.2022.5'
        exclude: []

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Login to Registry (GitHub)
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY_GITHUB }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Login to Registry (DockerHub)
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY_DOCKERHUB }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_SECRET }}
    -
      name: Get date
      id: timestamp
      run: |
        echo "::set-output name=date::$(date +'%Y-%m-%d')"
        echo "::set-output name=week::$(date +'%Y.%V')"
    -
      name: Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ env.REGISTRY_GITHUB }}/${{ env.REGISTRY_GITHUB_IMAGE }}
          ${{ env.REGISTRY_DOCKERHUB }}/${{ env.REGISTRY_DOCKERHUB_IMAGE }}
        flavor: |
          prefix=${{ matrix.payara }}-jdk${{ matrix.java }}-
        tags: |
          type=ref,event=branch
          type=raw,value=${{ steps.timestamp.outputs.week }}
    -
      name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: docker
        file: "docker/Dockerfile.public"
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        build-args: |
          BASE_IMAGE=azul/zulu-openjdk-debian:${{ matrix.java }}
          JAVA_VERSION=${{ matrix.java }}
          PAYARA_VERSION=${{ matrix.payara }}
          PAYARA_ADMIN_SECRET=Admin123
          POSTGRES_JDBC_VERSION=42.7.1
          MSSQL_JDBC_VERSION=11.2.3
          LOGBACK_ENCODER_VERSION=7.2
