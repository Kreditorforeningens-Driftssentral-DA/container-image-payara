---
- name: PROVISION PAYARA
  hosts: default
  become: true
  gather_facts: false

# ----------------------------------------------------------------------------------------------
# VARIABLES (PASSED FROM PACKER TO ANSIBLE VIA EXTRA-VARS)
# ----------------------------------------------------------------------------------------------

  vars:
    timezone:
      continent: "{{TIMEZONE_CONTINENT|default('Europe')|string}}"
      city: "{{TIMEZONE_CITY|default('Oslo')|string}}"
    java:
      max_ram: "{{JAVA_MAX_RAM|default('85.0')|string}}"
    payara:
      user: "{{PAYARA_USER|default('payara')|string}}"
      home: "{{PAYARA_HOME|default('/opt/payara')|string}}"
      version_major: "{{PAYARA_VERSION_MAJOR|default('5')|string}}"
      version_minor: "{{PAYARA_VERSION_MINOR|default('2021.7')|string}}"
      domain: "{{PAYARA_DOMAIN|default('production')|string}}"
      asadmin_password: "{{PAYARA_ASADMIN_PASSWORD|default('Admin123')|string}}"

  tasks:
  
# ----------------------------------------------------------------------------------------------
# CREATE USER & GROUP
# ----------------------------------------------------------------------------------------------

  - name: Create Group
    ansible.builtin.group:
      name: "{{payara.user}}"
      state: present
      gid: 1250

  - name: Create User
    ansible.builtin.user:
      name: "{{payara.user}}"
      group: "{{payara.user}}"
      home: "{{payara.home}}"
      comment: "Payara service user"
      create_home: false
      state: present
      uid: 1250

# ----------------------------------------------------------------------------------------------
# UPLOAD ENTRYPOINT SCRIPT TO CONTAINER
# ----------------------------------------------------------------------------------------------

  - name: UPLOAD | add entrypoint-script
    block:
    - name: adding entrypoint script
      ansible.builtin.copy:
        src: files/docker-entrypoint.alpine.sh
        dest: /docker-entrypoint.sh
        owner: "{{payara.user}}"
        group: "{{payara.user}}"
        mode: '0740'

# ----------------------------------------------------------------------------------------------
# INSTALL PAYARA
# ----------------------------------------------------------------------------------------------

  - name: PAYARA
    block:
    - name: PAYARA | download archive
      local_action:
        module: ansible.builtin.get_url
        url: "https://repo1.maven.org/maven2/fish/payara/distributions/payara/{{payara.version_major}}.{{payara.version_minor}}/payara-{{payara.version_major}}.{{payara.version_minor}}.zip"
        dest: "cache/payara-{{payara.version_major}}.{{payara.version_minor}}.zip"
        mode: '0644'
        validate_certs: false
        timeout: 30

    - name: PAYARA | upload/extract archive into container
      ansible.builtin.unarchive:
        src: "cache/payara-{{payara.version_major}}.{{payara.version_minor}}.zip"
        dest: /opt

    - name: PAYARA | symlink folder(s)
      ansible.builtin.file:
        src: "/opt/payara{{payara.version_major}}"
        dest: "{{payara.home}}"
        owner: "{{payara.user}}"
        group: "{{payara.user}}"
        state: link

    - name: PAYARA | cleanup
      ansible.builtin.file:
        path: "{{item}}"
        state: absent
      loop:
      - "{{payara.home}}/glassfish/domains/domain1/"

# ----------------------------------------------------------------------------------------------
# CONFIGURE PAYARA
# ----------------------------------------------------------------------------------------------

  - name: ASADMIN
    block:
    - name: ASADMIN | create temporary asadmin password-file
      ansible.builtin.copy:
        content: |
          AS_ADMIN_PASSWORD=
          AS_ADMIN_NEWPASSWORD={{payara.asadmin_password}}
        dest: /tmp/secret.txt
        mode: '0640'

    - name: ASADMIN | set password
      ansible.builtin.shell:
        cmd: |
         {{payara.home}}/bin/asadmin --user admin create-domain --nopassword=true {{payara.domain}}
         {{payara.home}}/bin/asadmin --user admin --passwordfile=/tmp/secret.txt change-admin-password --domain_name={{payara.domain}}

    - name: ASADMIN | remove temporary password-file
      ansible.builtin.file:
        path: /tmp/secret.txt
        state: absent

  - name: CONFIG
    block:
    - name: CONFIG | create password-file
      ansible.builtin.copy:
        content: |
          AS_ADMIN_PASSWORD={{payara.asadmin_password}}
        dest: /opt/payara/secret.txt
        mode: '0640'
    
    # NOTE: It's required to set logback configuration-file before domain start.
    # REMOVED (not picket up..): /opt/payara/bin/asadmin --user admin --passwordfile=/opt/payara/secret.txt create-jvm-options '-XX\:+UseContainerSupport:-XX\:MaxRAMPercentage=75.0'
    - name: CONFIG | configure domain
      ansible.builtin.shell:
        cmd: |
          {{payara.home}}/bin/asadmin --user admin --passwordfile={{payara.home}}/secret.txt start-domain {{payara.domain}}
          {{payara.home}}/bin/asadmin --user admin --passwordfile={{payara.home}}/secret.txt enable-secure-admin
          for MEMORY_JVM_OPTION in $({{payara.home}}/bin/asadmin --user=admin --passwordfile={{payara.home}}/secret.txt list-jvm-options | grep "Xm[sx]"); do
            {{payara.home}}/bin/asadmin --user admin --passwordfile={{payara.home}}/secret.txt delete-jvm-options ${MEMORY_JVM_OPTION}
          done
          {{payara.home}}/bin/asadmin --user admin --passwordfile={{payara.home}}/secret.txt create-jvm-options "\-Dlogback.configurationFile=/tmp/logback.xml"
          {{payara.home}}/bin/asadmin --user admin --passwordfile={{payara.home}}/secret.txt stop-domain --kill=true {{payara.domain}}

# ----------------------------------------------------------------------------------------------
# CLEANUP
# ----------------------------------------------------------------------------------------------
...
