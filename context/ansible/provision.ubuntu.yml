---
- name: PROVISION PAYARA
  hosts: default
  become: true
  gather_facts: false

# ----------------------------------------------------------------------------------------------
# VARIABLES (PASSED FROM PACKER TO ANSIBLE VIA EXTRA-VARS)
# ----------------------------------------------------------------------------------------------

  vars:
    timezone:
      continent: "{{TIMEZONE_CONTINENT|default('Europe')|string}}"
      city: "{{TIMEZONE_CITY|default('Oslo')|string}}"
    locale:
      name: "{{LOCALE_NAME|default('nb_NO ISO-8859-1')|string}}"
      language_pack: "{{LOCALE_LANGUAGE_PACKAGE|default('language-pack-nb')|string}}"
    java:
      version: "{{JAVA_VERSION|default('openjdk-11-jre-headless'|string)}}"
      max_ram: "{{JAVA_MAX_RAM|default('85')|string}}"
    payara:
      group: "{{PAYARA_GROUP|default('payara')|string}}"
      user: "{{PAYARA_USER|default('payara')|string}}"
      version_major: "{{PAYARA_VERSION_MAJOR|default('5')|string}}"
      version_minor: "{{PAYARA_VERSION_MINOR|default('2020.7')|string}}"
      domain: "{{PAYARA_DOMAIN|default('production')|string}}"
      asadmin_password: "{{PAYARA_ASADMIN_PASSWORD|default('Admin123')|string}}"

  tasks:

# ----------------------------------------------------------------------------------------------
# UPLOAD ENTRYPOINT SCRIPT TO CONTAINER
# ----------------------------------------------------------------------------------------------

  - name: UPLOAD | add entrypoint-script
    block:
    - name: adding entrypoint script
      ansible.builtin.copy:
        src: files/docker-entrypoint.sh
        dest: /docker-entrypoint.sh
        owner: root
        group: root
        mode: '0740'

# ----------------------------------------------------------------------------------------------
# TIMEZONE
# ----------------------------------------------------------------------------------------------

  - name: TIMEZONE
    block:
    - name: TIMEZONE | preseed area config (region)
      ansible.builtin.debconf:
        name: tzdata
        question: tzdata/Areas
        value: "{{timezone['continent']}}"
        vtype: select

    - name: TIMEZONE | preseed zone config (city)
      ansible.builtin.debconf:
        name: tzdata
        question: "tzdata/Zones/{{timezone['continent']}}"
        value: "{{timezone['city']}}"
        vtype: select

    - name: TIMEZONE | install
      ansible.builtin.package:
        name:
        - tzdata
        state: present

# ----------------------------------------------------------------------------------------------
# LOCALE AND LANGUAGES
# ----------------------------------------------------------------------------------------------

  - name:
    ansible.builtin.apt:
      update_cache: yes

  - name: LOCALE | add languagepacks
    block:
    - name: installing laguagepack(s)
      ansible.builtin.package:
        name:
        - "{{locale['language_pack']}}"
        - locales
        state: present

    - name: LOCALE | generate files
      ansible.builtin.command:
        argv:
        - /usr/sbin/locale-gen
        - "{{locale['name']}}"

# ----------------------------------------------------------------------------------------------
# PAYARA USER AND GROUP
# ----------------------------------------------------------------------------------------------

  - name: USERS
    block:
    - name: USERS | create system group
      ansible.builtin.group:
        name: "{{payara['group']}}"
        system: true

    - name: USERS | create system user
      ansible.builtin.user:
        name: "{{payara['user']}}"
        group: "{{payara['group']}}"
        comment: Payara Server System Account
        system: true

# ----------------------------------------------------------------------------------------------
# INSTALL JAVA
# ----------------------------------------------------------------------------------------------

    - name: JAVA | install runtime
      ansible.builtin.package:
        name: "{{java['version']}}"
        state: present

# ----------------------------------------------------------------------------------------------
# INSTALL PAYARA
# ----------------------------------------------------------------------------------------------

  - name: PAYARA
    block:
    - name: PAYARA | download archive
      local_action:
        module: ansible.builtin.get_url
        url: "https://repo1.maven.org/maven2/fish/payara/distributions/payara/{{payara['version_major']}}.{{payara['version_minor']}}/payara-{{payara['version_major']}}.{{payara['version_minor']}}.zip"
        dest: "cache/payara-{{payara['version_major']}}.{{payara['version_minor']}}.zip"
        mode: '0644'
        validate_certs: false
        timeout: 30

    - name: PAYARA | upload/extract archive into container
      ansible.builtin.unarchive:
        src: "cache/payara-{{payara['version_major']}}.{{payara['version_minor']}}.zip"
        dest: /opt

    - name: PAYARA | symlink folder(s)
      ansible.builtin.file:
        src: /opt/payara{{payara['version_major']}}
        dest: /opt/payara
        state: link

    - name: PAYARA | cleanup
      ansible.builtin.file:
        path: "{{item}}"
        state: absent
      loop:
      - /opt/payara/glassfish/domains/domain1/

# ----------------------------------------------------------------------------------------------
# CONFIGURE PAYARA
# ----------------------------------------------------------------------------------------------

  - name: ASADMIN
    block:
    - name: ASADMIN | create temporary asadmin password-file
      ansible.builtin.copy:
        content: |
          AS_ADMIN_PASSWORD=
          AS_ADMIN_NEWPASSWORD={{payara['asadmin_password']}}
        dest: /tmp/secret.txt
        mode: '0640'

    - name: ASADMIN | set password
      ansible.builtin.shell:
        cmd: |
         /opt/payara/bin/asadmin --user admin create-domain --nopassword=true {{payara['domain']}}
         /opt/payara/bin/asadmin --user admin --passwordfile=/tmp/secret.txt change-admin-password --domain_name={{payara['domain']}}

    - name: ASADMIN | remove temporary password-file
      ansible.builtin.file:
        path: /tmp/secret.txt
        state: absent

  - name: CONFIG
    block:
    - name: CONFIG | create password-file
      ansible.builtin.copy:
        content: |
          AS_ADMIN_PASSWORD={{payara['asadmin_password']}}
        dest: /opt/payara/secret.txt
        mode: '0640'
    
    # NOTE: It's required to set logback configuration-file before domain start.
    - name: CONFIG | configure domain
      ansible.builtin.shell:
        cmd: |
          /opt/payara/bin/asadmin --user admin --passwordfile=/opt/payara/secret.txt start-domain {{payara['domain']}}
          /opt/payara/bin/asadmin --user admin --passwordfile=/opt/payara/secret.txt enable-secure-admin
          for MEMORY_JVM_OPTION in $(/opt/payara/bin/asadmin --user=admin --passwordfile=/opt/payara/secret.txt list-jvm-options | grep "Xm[sx]"); do
            /opt/payara/bin/asadmin --user admin --passwordfile=/opt/payara/secret.txt delete-jvm-options ${MEMORY_JVM_OPTION}
          done
          /opt/payara/bin/asadmin --user admin --passwordfile=/opt/payara/secret.txt create-jvm-options '-XX\:+UseContainerSupport:-XX\:MaxRAMPercentage={{java['max_ram']}}'
          /opt/payara/bin/asadmin --user admin --passwordfile=/opt/payara/secret.txt create-jvm-options "\-Dlogback.configurationFile=/tmp/logback.xml"
          /opt/payara/bin/asadmin --user admin --passwordfile=/opt/payara/secret.txt stop-domain --kill=true {{payara['domain']}}
...
